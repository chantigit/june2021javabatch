
Index1:
=======
1.Array Vs Collection
2.Wrapper Class
3.Generics
4.DataStructure


Index2:
=======
1.Collection Introduction
2.Collection Vs Collections
3.Collection interface 12 methods & Map interface 14 methods
4.Iterable & Iterators


Index3:
=======
1.List
2.Set
3.Map

_________________________________________________________________________________________________

1.Array Vs Collection:
=====================
	int	a[]={10,8,99,777,5,8,6,33,157};
	
Arrays drawbacks : notifying that all we can achive with the Collections

	- can we store heterogeneous elements in arrays   	?    No
	- can we restrict duplicates arrays               	?    No
	- can we store elements like "key,value"  pairs   	?    No
	- can we make array as dynamic(growable at runtime)	?    No
	- Is any readymade methods are avaialble in arrays to perform follwing operations ?
		1. no of elements	: length
		2. insert element at begin  , end , specific
		3. remove element at begin  , end , specific
		4. merging arrays
		5. comparing arrays
		6. sorting array
		7. search an element in array
		8. arrays is empty or not 
		9. random accessing 
		
	





2.Wrapper class :
=================
All 8 primitives are treated as readymade classes from java.lang packages are reffered as Wrapper Classes.

Wrapper class are mainly used to wrapping/conversion data from one type to another.

1.TypeCasting using 8 primitives:
	1.Implicit TypeCasting
	2.Explicit TypeCasting

2.TypeCasting using 8 wrapper class:
	1.Auto boxing
	2.Auto unboxing
	
	1.String to any type 
	2.Any type to String  
	3.Any type to Any type











3.Generics:
===========
Generics can allow user to work with specific type of data or any type of data.
Generics can be declared using angular braces <GenericName>
Generics can be declared in 2 levels

	1.Method level Generic
		<GenericName>  void myMethod1()
		{
		}
	2.Class level Generic
		class ClassName<GenericName>
		{
		}












4.DataStructure Basics:
======================

1.Linear DataStructure
	Here memory organized sequential
	Linear DataStructure are implemented by Arrays
		1.Static Arrays  (Fixed 	arrays)
		2.Dynamic Array	 (Growable 	arrays)
		
2.Non-Linear DataStructure
	Here memory organized randomly
	Non-Linear DataStructure are implemented by LinkedLists ( implemented by Pointers)
		1.Single LinkedLists (Forward element accessing)
		2.Double LinkedLists (Forward & Backward element accessing)

3. Hashing DataStructure
4. Balanced Tree DataStructure






=======================================================================================

	
1.Collection introduction:
==========================
I.List interface & 4 implemented classes (AL,LL,V,S)

	->Object Duplication is allowed	& Insertion ordered preserved
	
		"Ajay","Venu","Abhi","Ajay","Arun","Venu",....
	
Ex: student name objects , student city objects, student age objects,...

II.Set interface & 3 implemented classes  (HS,LHS,TS)

	->Unique objects are is allowed	& No Insertion ordered preserved

	501,505,504,502,503,....

Ex: student roll number objects ,aadar card objects,mobile, address,mailid,...

III.Map interface & 8 implemented classes  (HM,LHM,TM,IHM,WHP,D,Ht,P)

	->Ojects are represened in key,value pairs
	->key should be unique & value can be duplicate
	->Entry  = One pair of key,value
	
		601		5		Entry1
		602		5		Entry2
		603		8		
		604		9
		
Ex: customer id  & items in the cart
	student id  & taken courses
	Empl ENo & salary 
	student id and student gender
	address,no of people in house



Requirement1:Store & Process customer names in amazon						=> List of names(v)		
Requirement2:Store & Process customer phone numbers in amazon				=> Set of phone numbers(v)
Requirement3:Store & Process customer mailid & no of orders in amazon		=> Map of mailid(k) & no of orders(v)

2.Collection Vs Collections:
==============================

Collection  => Group objects which belongs to same class
		Ex:
				dell,hp,acer,...  are collection of Laptops
				
			-> List & Set are child of Collection interface (which has unimplemented methods)
				
Collections	=> Group objects which belongs to multiple different class
Ex:Amazon
	Laptops			dell,hp,acer,...
	Mobiles			oppo,oneplus,samsung,...
	TV				sony,panasonic...
	...
			-> Collections is a class which has implemented methods
	
Note:
=====
1.List & Set store & process only values where as Map store & process key & value pairs
2.Map is not a child of Collection interface.
3.Collection interface methods are applicable for only List & Set.

3.Collection interface methods & Map interface methods:
=======================================================

					Collection interface methods						Map interface methods
				
				
1.Insertion Related
					add(value)											put(key,value)
					addAll(Collection)									putAll(Map)
2.Removal Related
					remove(value)										remove(key)
					removeAll(Collection)								clear()
					retainAll(Collection)
					clear()
3.Searching Related
					contains(value)										containsKey()
					containsAll(Collection)								containsValue()
4.Utility methods
					isEmpty()											isEmpty()
					size()												size()
					equals()											equals()
					hashCode()											hashCode()
																		
																		get(key)
																		keySet()
																		values()
																		entrySet()